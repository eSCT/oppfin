// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.searchbox.domain;

import com.searchbox.domain.SearchElementDefinition;
import java.util.List;
import org.springframework.transaction.annotation.Transactional;

privileged aspect SearchElementDefinition_Roo_Jpa_ActiveRecord {
    
    public static final List<String> SearchElementDefinition.fieldNames4OrderClauseFilter = java.util.Arrays.asList("preset");
    
    public static long SearchElementDefinition.countSearchElementDefinitions() {
        return entityManager().createQuery("SELECT COUNT(o) FROM SearchElementDefinition o", Long.class).getSingleResult();
    }
    
    public static List<SearchElementDefinition> SearchElementDefinition.findAllSearchElementDefinitions() {
        return entityManager().createQuery("SELECT o FROM SearchElementDefinition o", SearchElementDefinition.class).getResultList();
    }
    
    public static List<SearchElementDefinition> SearchElementDefinition.findAllSearchElementDefinitions(String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM SearchElementDefinition o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, SearchElementDefinition.class).getResultList();
    }
    
    public static SearchElementDefinition SearchElementDefinition.findSearchElementDefinition(Long id) {
        if (id == null) return null;
        return entityManager().find(SearchElementDefinition.class, id);
    }
    
    public static List<SearchElementDefinition> SearchElementDefinition.findSearchElementDefinitionEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM SearchElementDefinition o", SearchElementDefinition.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    public static List<SearchElementDefinition> SearchElementDefinition.findSearchElementDefinitionEntries(int firstResult, int maxResults, String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM SearchElementDefinition o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, SearchElementDefinition.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public SearchElementDefinition SearchElementDefinition.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        SearchElementDefinition merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
