// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.searchbox.domain;

import com.searchbox.domain.SolrCloudCollectionBean;
import com.searchbox.domain.collection.SolrCloudCollection;
import com.searchbox.domain.util.MessageFactory;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlOutputText;
import javax.faces.component.html.HtmlPanelGrid;
import javax.faces.context.FacesContext;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.component.message.Message;
import org.primefaces.component.outputlabel.OutputLabel;
import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;

privileged aspect SolrCloudCollectionBean_Roo_ManagedBean {
    
    declare @type: SolrCloudCollectionBean: @ManagedBean(name = "solrCloudCollectionBean");
    
    declare @type: SolrCloudCollectionBean: @SessionScoped;
    
    private String SolrCloudCollectionBean.name = "SolrCloudCollections";
    
    private SolrCloudCollection SolrCloudCollectionBean.solrCloudCollection;
    
    private List<SolrCloudCollection> SolrCloudCollectionBean.allSolrCloudCollections;
    
    private boolean SolrCloudCollectionBean.dataVisible = false;
    
    private List<String> SolrCloudCollectionBean.columns;
    
    private HtmlPanelGrid SolrCloudCollectionBean.createPanelGrid;
    
    private HtmlPanelGrid SolrCloudCollectionBean.editPanelGrid;
    
    private HtmlPanelGrid SolrCloudCollectionBean.viewPanelGrid;
    
    private boolean SolrCloudCollectionBean.createDialogVisible = false;
    
    @PostConstruct
    public void SolrCloudCollectionBean.init() {
        columns = new ArrayList<String>();
        columns.add("name");
        columns.add("zkHost");
    }
    
    public String SolrCloudCollectionBean.getName() {
        return name;
    }
    
    public List<String> SolrCloudCollectionBean.getColumns() {
        return columns;
    }
    
    public List<SolrCloudCollection> SolrCloudCollectionBean.getAllSolrCloudCollections() {
        return allSolrCloudCollections;
    }
    
    public void SolrCloudCollectionBean.setAllSolrCloudCollections(List<SolrCloudCollection> allSolrCloudCollections) {
        this.allSolrCloudCollections = allSolrCloudCollections;
    }
    
    public String SolrCloudCollectionBean.findAllSolrCloudCollections() {
        allSolrCloudCollections = SolrCloudCollection.findAllSolrCloudCollections();
        dataVisible = !allSolrCloudCollections.isEmpty();
        return null;
    }
    
    public boolean SolrCloudCollectionBean.isDataVisible() {
        return dataVisible;
    }
    
    public void SolrCloudCollectionBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid SolrCloudCollectionBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void SolrCloudCollectionBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid SolrCloudCollectionBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void SolrCloudCollectionBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid SolrCloudCollectionBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void SolrCloudCollectionBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public HtmlPanelGrid SolrCloudCollectionBean.populateCreatePanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel nameCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        nameCreateOutput.setFor("nameCreateInput");
        nameCreateOutput.setId("nameCreateOutput");
        nameCreateOutput.setValue("Name:");
        htmlPanelGrid.getChildren().add(nameCreateOutput);
        
        InputText nameCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        nameCreateInput.setId("nameCreateInput");
        nameCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{solrCloudCollectionBean.solrCloudCollection.name}", String.class));
        nameCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(nameCreateInput);
        
        Message nameCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        nameCreateInputMessage.setId("nameCreateInputMessage");
        nameCreateInputMessage.setFor("nameCreateInput");
        nameCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(nameCreateInputMessage);
        
        OutputLabel zkHostCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        zkHostCreateOutput.setFor("zkHostCreateInput");
        zkHostCreateOutput.setId("zkHostCreateOutput");
        zkHostCreateOutput.setValue("Zk Host:");
        htmlPanelGrid.getChildren().add(zkHostCreateOutput);
        
        InputText zkHostCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        zkHostCreateInput.setId("zkHostCreateInput");
        zkHostCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{solrCloudCollectionBean.solrCloudCollection.zkHost}", String.class));
        zkHostCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(zkHostCreateInput);
        
        Message zkHostCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        zkHostCreateInputMessage.setId("zkHostCreateInputMessage");
        zkHostCreateInputMessage.setFor("zkHostCreateInput");
        zkHostCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(zkHostCreateInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid SolrCloudCollectionBean.populateEditPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel nameEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        nameEditOutput.setFor("nameEditInput");
        nameEditOutput.setId("nameEditOutput");
        nameEditOutput.setValue("Name:");
        htmlPanelGrid.getChildren().add(nameEditOutput);
        
        InputText nameEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        nameEditInput.setId("nameEditInput");
        nameEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{solrCloudCollectionBean.solrCloudCollection.name}", String.class));
        nameEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(nameEditInput);
        
        Message nameEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        nameEditInputMessage.setId("nameEditInputMessage");
        nameEditInputMessage.setFor("nameEditInput");
        nameEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(nameEditInputMessage);
        
        OutputLabel zkHostEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        zkHostEditOutput.setFor("zkHostEditInput");
        zkHostEditOutput.setId("zkHostEditOutput");
        zkHostEditOutput.setValue("Zk Host:");
        htmlPanelGrid.getChildren().add(zkHostEditOutput);
        
        InputText zkHostEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        zkHostEditInput.setId("zkHostEditInput");
        zkHostEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{solrCloudCollectionBean.solrCloudCollection.zkHost}", String.class));
        zkHostEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(zkHostEditInput);
        
        Message zkHostEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        zkHostEditInputMessage.setId("zkHostEditInputMessage");
        zkHostEditInputMessage.setFor("zkHostEditInput");
        zkHostEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(zkHostEditInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid SolrCloudCollectionBean.populateViewPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText nameLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        nameLabel.setId("nameLabel");
        nameLabel.setValue("Name:");
        htmlPanelGrid.getChildren().add(nameLabel);
        
        HtmlOutputText nameValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        nameValue.setId("nameValue");
        nameValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{solrCloudCollectionBean.solrCloudCollection.name}", String.class));
        htmlPanelGrid.getChildren().add(nameValue);
        
        HtmlOutputText zkHostLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        zkHostLabel.setId("zkHostLabel");
        zkHostLabel.setValue("Zk Host:");
        htmlPanelGrid.getChildren().add(zkHostLabel);
        
        HtmlOutputText zkHostValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        zkHostValue.setId("zkHostValue");
        zkHostValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{solrCloudCollectionBean.solrCloudCollection.zkHost}", String.class));
        htmlPanelGrid.getChildren().add(zkHostValue);
        
        return htmlPanelGrid;
    }
    
    public SolrCloudCollection SolrCloudCollectionBean.getSolrCloudCollection() {
        if (solrCloudCollection == null) {
            solrCloudCollection = new SolrCloudCollection();
        }
        return solrCloudCollection;
    }
    
    public void SolrCloudCollectionBean.setSolrCloudCollection(SolrCloudCollection solrCloudCollection) {
        this.solrCloudCollection = solrCloudCollection;
    }
    
    public String SolrCloudCollectionBean.onEdit() {
        return null;
    }
    
    public boolean SolrCloudCollectionBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void SolrCloudCollectionBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String SolrCloudCollectionBean.displayList() {
        createDialogVisible = false;
        findAllSolrCloudCollections();
        return "solrCloudCollection";
    }
    
    public String SolrCloudCollectionBean.displayCreateDialog() {
        solrCloudCollection = new SolrCloudCollection();
        createDialogVisible = true;
        return "solrCloudCollection";
    }
    
    public String SolrCloudCollectionBean.persist() {
        String message = "";
        if (solrCloudCollection.getId() != null) {
            solrCloudCollection.merge();
            message = "message_successfully_updated";
        } else {
            solrCloudCollection.persist();
            message = "message_successfully_created";
        }
        RequestContext context = RequestContext.getCurrentInstance();
        context.execute("createDialogWidget.hide()");
        context.execute("editDialogWidget.hide()");
        
        FacesMessage facesMessage = MessageFactory.getMessage(message, "SolrCloudCollection");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllSolrCloudCollections();
    }
    
    public String SolrCloudCollectionBean.delete() {
        solrCloudCollection.remove();
        FacesMessage facesMessage = MessageFactory.getMessage("message_successfully_deleted", "SolrCloudCollection");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllSolrCloudCollections();
    }
    
    public void SolrCloudCollectionBean.reset() {
        solrCloudCollection = null;
        createDialogVisible = false;
    }
    
    public void SolrCloudCollectionBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
