// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.searchbox.web;

import com.searchbox.domain.Account;
import com.searchbox.domain.Field;
import com.searchbox.domain.collection.SolrCloudCollection;
import com.searchbox.domain.collection.SolrCollection;
import com.searchbox.domain.facet.FieldFacet;
import com.searchbox.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Account, String> ApplicationConversionServiceFactoryBean.getAccountToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.searchbox.domain.Account, java.lang.String>() {
            public String convert(Account account) {
                return new StringBuilder().append(account.getUsername()).append(' ').append(account.getEmail()).append(' ').append(account.getPassword()).append(' ').append(account.getFullName()).toString();
            }
        };
    }
    
    public Converter<Long, Account> ApplicationConversionServiceFactoryBean.getIdToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.searchbox.domain.Account>() {
            public com.searchbox.domain.Account convert(java.lang.Long id) {
                return Account.findAccount(id);
            }
        };
    }
    
    public Converter<String, Account> ApplicationConversionServiceFactoryBean.getStringToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.searchbox.domain.Account>() {
            public com.searchbox.domain.Account convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Account.class);
            }
        };
    }
    
    public Converter<Field, String> ApplicationConversionServiceFactoryBean.getFieldToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.searchbox.domain.Field, java.lang.String>() {
            public String convert(Field field) {
                return new StringBuilder().append(field.getKey()).append(' ').append(field.getLabel()).append(' ').append(field.getType()).append(' ').append(field.getWeight()).toString();
            }
        };
    }
    
    public Converter<Long, Field> ApplicationConversionServiceFactoryBean.getIdToFieldConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.searchbox.domain.Field>() {
            public com.searchbox.domain.Field convert(java.lang.Long id) {
                return Field.findField(id);
            }
        };
    }
    
    public Converter<String, Field> ApplicationConversionServiceFactoryBean.getStringToFieldConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.searchbox.domain.Field>() {
            public com.searchbox.domain.Field convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Field.class);
            }
        };
    }
    
    public Converter<SolrCloudCollection, String> ApplicationConversionServiceFactoryBean.getSolrCloudCollectionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.searchbox.domain.collection.SolrCloudCollection, java.lang.String>() {
            public String convert(SolrCloudCollection solrCloudCollection) {
                return new StringBuilder().append(solrCloudCollection.getName()).append(' ').append(solrCloudCollection.getZkHost()).toString();
            }
        };
    }
    
    public Converter<Long, SolrCloudCollection> ApplicationConversionServiceFactoryBean.getIdToSolrCloudCollectionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.searchbox.domain.collection.SolrCloudCollection>() {
            public com.searchbox.domain.collection.SolrCloudCollection convert(java.lang.Long id) {
                return SolrCloudCollection.findSolrCloudCollection(id);
            }
        };
    }
    
    public Converter<String, SolrCloudCollection> ApplicationConversionServiceFactoryBean.getStringToSolrCloudCollectionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.searchbox.domain.collection.SolrCloudCollection>() {
            public com.searchbox.domain.collection.SolrCloudCollection convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SolrCloudCollection.class);
            }
        };
    }
    
    public Converter<SolrCollection, String> ApplicationConversionServiceFactoryBean.getSolrCollectionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.searchbox.domain.collection.SolrCollection, java.lang.String>() {
            public String convert(SolrCollection solrCollection) {
                return new StringBuilder().append(solrCollection.getName()).append(' ').append(solrCollection.getSolrHost()).toString();
            }
        };
    }
    
    public Converter<Long, SolrCollection> ApplicationConversionServiceFactoryBean.getIdToSolrCollectionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.searchbox.domain.collection.SolrCollection>() {
            public com.searchbox.domain.collection.SolrCollection convert(java.lang.Long id) {
                return SolrCollection.findSolrCollection(id);
            }
        };
    }
    
    public Converter<String, SolrCollection> ApplicationConversionServiceFactoryBean.getStringToSolrCollectionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.searchbox.domain.collection.SolrCollection>() {
            public com.searchbox.domain.collection.SolrCollection convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SolrCollection.class);
            }
        };
    }
    
    public Converter<FieldFacet, String> ApplicationConversionServiceFactoryBean.getFieldFacetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.searchbox.domain.facet.FieldFacet, java.lang.String>() {
            public String convert(FieldFacet fieldFacet) {
                return new StringBuilder().append(fieldFacet.getLabel()).append(' ').append(fieldFacet.getPosition()).append(' ').append(fieldFacet.getFieldName()).toString();
            }
        };
    }
    
    public Converter<Long, FieldFacet> ApplicationConversionServiceFactoryBean.getIdToFieldFacetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.searchbox.domain.facet.FieldFacet>() {
            public com.searchbox.domain.facet.FieldFacet convert(java.lang.Long id) {
                return FieldFacet.findFieldFacet(id);
            }
        };
    }
    
    public Converter<String, FieldFacet> ApplicationConversionServiceFactoryBean.getStringToFieldFacetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.searchbox.domain.facet.FieldFacet>() {
            public com.searchbox.domain.facet.FieldFacet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), FieldFacet.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAccountToStringConverter());
        registry.addConverter(getIdToAccountConverter());
        registry.addConverter(getStringToAccountConverter());
        registry.addConverter(getFieldToStringConverter());
        registry.addConverter(getIdToFieldConverter());
        registry.addConverter(getStringToFieldConverter());
        registry.addConverter(getSolrCloudCollectionToStringConverter());
        registry.addConverter(getIdToSolrCloudCollectionConverter());
        registry.addConverter(getStringToSolrCloudCollectionConverter());
        registry.addConverter(getSolrCollectionToStringConverter());
        registry.addConverter(getIdToSolrCollectionConverter());
        registry.addConverter(getStringToSolrCollectionConverter());
        registry.addConverter(getFieldFacetToStringConverter());
        registry.addConverter(getIdToFieldFacetConverter());
        registry.addConverter(getStringToFieldFacetConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
